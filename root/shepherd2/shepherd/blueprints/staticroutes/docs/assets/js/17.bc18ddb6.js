(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{177:function(t,s,n){"use strict";n.r(s);var a=n(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"gpio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gpio","aria-hidden":"true"}},[t._v("#")]),t._v(" GPIO")]),t._v(" "),n("p",[t._v("GPIO, or General Purpose Input Output, is the main way you'll interface with simple or obscure bits of hardware. This tutorial will introduce the GPIO system and how to use it.")]),t._v(" "),n("h2",{attrs:{id:"gpio-pins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gpio-pins","aria-hidden":"true"}},[t._v("#")]),t._v(" GPIO Pins")]),t._v(" "),n("p",[t._v('On the side of your brainbox, there are 4 regular pins and a "+5v" and "-" pin. The top of the brain box labels which pin corresponds to which number. Different devices need to be plugged into different pins.')]),t._v(" "),n("h2",{attrs:{id:"led-output"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#led-output","aria-hidden":"true"}},[t._v("#")]),t._v(" LED Output")]),t._v(" "),n("p",[t._v("If you want to put an LED on your robot, for testing or just for looks, you'll need to plug one side of the LED into the - pin, and the other side of the LED into any regular pin (such as 1). Then, use the following code to set up the pin in "),n("code",[t._v("OUTPUT")]),t._v(" mode and turn the LED on:")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" robot\nR "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Robot"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# If you're not using GPIO pin 1, change this number to whatever pin you're using.")]),t._v("\nR"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mode "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUTPUT\nR"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digital "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),n("p",[t._v("Try using a loop to make the light turn on and off every 2 seconds. You'll need the time library from the motors exercise.")]),t._v(" "),n("h2",{attrs:{id:"buttons"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#buttons","aria-hidden":"true"}},[t._v("#")]),t._v(" Buttons")]),t._v(" "),n("p",[t._v("While your robot hopefully won't be colliding with much, buttons are a good way for a robot to know if it's driven into something. Buttons should be plugged into the - pin and a regular pin (such as 1). Using the "),n("code",[t._v("INPUT")]),t._v(" mode, you can detect when a button is pressed.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" robot\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\nR "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Robot"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# If you're not using GPIO pin 1, change this number to whatever pin you're using.")]),t._v("\nR"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mode "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INPUT\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("True")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digital"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Pressed"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("else")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Not Pressed"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    time"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("0.1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Try making a light turn on or off depending on if a button is pressed.")]),t._v(" "),n("h2",{attrs:{id:"potentiometers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#potentiometers","aria-hidden":"true"}},[t._v("#")]),t._v(" Potentiometers")]),t._v(" "),n("p",[t._v("Another form of input is a potentiometer or a variable resistor. Potentiometers should be plugged into the +5v, a regular pin (such as 3) and the - pin. Using "),n("code",[t._v("INPUT_ANALOG")]),t._v(" mode, you can read the voltage output of the resistor (between 0V and 5V).")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" robot\n\nR "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Robot"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nPOT_PIN "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("\n\nR"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POT_PIN"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mode "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" robot"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INPUT_ANALOG\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("True")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gpio"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POT_PIN"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("analog"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}],!1,null,null,null);o.options.__file="hello-gpio.md";s.default=o.exports}}]);